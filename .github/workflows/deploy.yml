name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-flask pytest-cov
    
    - name: Set up test environment
      run: |
        mkdir -p src/database
        mkdir -p /tmp/swarm_workspace
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: test-secret-key
        OPENROUTER_API_KEY: test-key
        SUPERMEMORY_API_KEY: test-key
        MAILGUN_API_KEY: test-key
        MAILGUN_DOMAIN: test.com
        MAILGUN_WEBHOOK_SIGNING_KEY: test-key
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: test-secret-key
        OPENROUTER_API_KEY: test-key
        SUPERMEMORY_API_KEY: test-key
        MAILGUN_API_KEY: test-key
        MAILGUN_DOMAIN: test.com
        MAILGUN_WEBHOOK_SIGNING_KEY: test-key
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        echo "Deployment triggered automatically by Render webhook"
        echo "Render will pull latest code from main branch"
        echo "Deployment URL: https://swarm-agents-web.onrender.com"
    
    - name: Notify deployment status
      run: |
        echo "âœ… Deployment initiated successfully"
        echo "ðŸ”— Application will be available at: https://swarm-agents-web.onrender.com"
        echo "ðŸ“Š Monitor deployment at: https://dashboard.render.com"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt
    
    - name: Run Bandit security linter
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: bandit-report.json

